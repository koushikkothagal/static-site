'use strict'

var Parser = require('htmlparser2').Parser


var parse = exports.parse =
function parse(html, start, c) {
  var stack = [start]
  function swap_top (o) {
    var f = stack.pop()
    stack.push(c.append(f, o))
  }
  function pop_n_swap (fun) {
    var f = stack.pop()
    var s = stack.pop()
    stack.push(c.append(s, fun(f)))
  }
  var parser = new Parser({
    onopentag: function(name, attrs) {
      stack.push(c.open(name, attrs))
    },
    ontext: function(text) {
      swap_top(text)
    },
    onclosetag: function(tagname) {
      pop_n_swap(c.close)
    },
    onprocessinginstruction: function(instr, content) {
      swap_top(c.on_instruction(instr, content))
    },
    onerror: function(e) {
      c.on_error(e)
    },
    oncomment: function(content) {
      swap_top(c.on_comment(content))
    }
  })

  parser.write(html)
  parser.end()
  return stack[0]
}



var self_closing = [
  'hr', 'br', 'link', 'meta', 'img',
  'area', 'base', 'col', 'comand',
  'embed', 'input', 'keygen', 'param',
  'source', 'track', 'wbr'
]


function attrs_to_str(attrs) {
  var arr = []
  for(var k in attrs) {
    arr.push(' ' + k + '="' + (attrs[k] || '') + '"')
  }
  return arr.join('')
}

function tag_body(tag, inner) {
  return self_closing.indexOf(tag) >= 0 && !inner
    ? '/>'
    : '>' + (inner || '') + '</' + tag + '>'
}

function tag_to_str(tag_obj) {
  return '<' + tag_obj.tag
    + attrs_to_str(tag_obj.attrs)
    + tag_body(tag_obj.tag, tag_obj.inner)
}


var update_html = exports.update_html =
function update_html(html, updaters) {
  updaters = updaters || []
  var result = parse(
    html,
    {inner: ''},
    {
      append: function (o, s){o.inner += s;return o},
      open: function(tag, attrs){
        return updaters.reduce(function(tag_obj, updater) {
            return updater(tag_obj)
          },
          {tag: tag, attrs: attrs, inner: ''})
      },
      close: tag_to_str,
      on_instruction: function(instr, content){return '<' + content + '>'},
      on_error: function(e){console.log(e)},
      on_comment: function(content){return '<!--' + content + '-->'}
    })
  return result.inner
}

var save_html = exports.save_html = update_html
